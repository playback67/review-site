<?php


namespace app\core; // объявляем пространство имен ядра
// На основе абстрактного класса нельзя создавать объекты, и любой класс, содержащий хотя бы один абстрактный метод, должен быть определён как абстрактный. 
// Методы, объявленные абстрактными, несут, по существу, лишь описательный смысл и не могут включать реализацию.
// При наследовании от абстрактного класса, все методы, помеченные абстрактными в родительском классе, должны быть определены в дочернем классе и следовать обычным правилам наследования и совместимости сигнатуры.
abstract class Controller // объявляем абстрактный класс контроллер
{
	public $route; // объявляем переменную маршрутизатора
	public $view; // объявляем переменную вьюшки
	public $model; // объявляем переменную модели

	public function __construct($route) // объявляем метод-конструктор
	{
		$this->route = $route;
		$this->view = new View($this->route); // связываем вью с маршрутизатором?
	}

	public function loadModel($name) // грузим модель
	{
		$path = 'app\models\\' . ucfirst($name); // преобразуем первый символ строки в верхнтй регистр (не понял, чего именно касается name)
		if (class_exists($path)) { // если класс объявлен, то
			$this->model[$name] = new $path; // а тут уже не совсем понял логику
			return $this->model;
		}
	}
}